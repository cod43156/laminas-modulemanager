<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.27.0@faf106e717c37b8c81721845dba9de3d8deed8ff">
  <file src="src/Feature/ConsoleBannerProviderInterface.php">
    <UndefinedClass occurrences="1">
      <code>AdapterInterface</code>
    </UndefinedClass>
  </file>
  <file src="src/Feature/ConsoleUsageProviderInterface.php">
    <UndefinedClass occurrences="1">
      <code>AdapterInterface</code>
    </UndefinedClass>
  </file>
  <file src="src/Listener/AutoloaderListener.php">
    <MixedArgument occurrences="1">
      <code>$autoloaderConfig</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$autoloaderConfig</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="1">
      <code>$module</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Listener/ConfigListener.php">
    <DocblockTypeContradiction occurrences="3">
      <code>is_array($config)</code>
      <code>is_array($paths)</code>
      <code>is_string($path)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="1">
      <code>$this-&gt;mergedConfig</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;getOptions()-&gt;getExtraConfig() ?: []</code>
    </InvalidPropertyAssignmentValue>
    <MissingReturnType occurrences="1">
      <code>addConfigPaths</code>
    </MissingReturnType>
    <MixedArgument occurrences="9">
      <code>$config</code>
      <code>$config</code>
      <code>$file</code>
      <code>$file</code>
      <code>$path</code>
      <code>$path['path']</code>
      <code>$path['type']</code>
      <code>$this-&gt;getCachedConfig()</code>
      <code>$this-&gt;getMergedConfig(false)</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$path['path']</code>
      <code>$path['type']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="5">
      <code>$config</code>
      <code>$config</code>
      <code>$file</code>
      <code>$path</code>
      <code>$path</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>getEventManager</code>
      <code>triggerEvent</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getEventManager</code>
    </PossiblyInvalidMethodCall>
    <UnresolvableInclude occurrences="1">
      <code>include $this-&gt;getOptions()-&gt;getConfigCacheFile()</code>
    </UnresolvableInclude>
  </file>
  <file src="src/Listener/DefaultListenerAggregate.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>DefaultListenerAggregate</code>
    </ImplementedReturnTypeMismatch>
    <MixedArgument occurrences="1">
      <code>$listener</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$listener</code>
    </MixedAssignment>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$configListener</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod occurrences="1">
      <code>attach</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Listener/InitTrigger.php">
    <PossiblyNullArgument occurrences="1">
      <code>$module</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Listener/ListenerOptions.php">
    <InvalidPropertyAssignmentValue occurrences="4">
      <code>$configGlobPaths</code>
      <code>$configStaticPaths</code>
      <code>$extraConfig</code>
      <code>$modulePaths</code>
    </InvalidPropertyAssignmentValue>
    <MixedArgument occurrences="1">
      <code>func_get_args()</code>
    </MixedArgument>
    <PossiblyNullOperand occurrences="4">
      <code>$this-&gt;getCacheDir()</code>
      <code>$this-&gt;getCacheDir()</code>
      <code>$this-&gt;getCacheDir()</code>
      <code>$this-&gt;getCacheDir()</code>
    </PossiblyNullOperand>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$configCacheKey</code>
      <code>$moduleMapCacheKey</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="6">
      <code>(bool) $checkDependencies</code>
      <code>(bool) $enabled</code>
      <code>(bool) $enabled</code>
      <code>(bool) $flag</code>
      <code>(string) $this-&gt;configCacheKey</code>
      <code>(string) $this-&gt;moduleMapCacheKey</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Listener/LocatorRegistrationListener.php">
    <MixedArgument occurrences="2">
      <code>$module</code>
      <code>$module</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$events</code>
      <code>$module</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="4">
      <code>attach</code>
      <code>attach</code>
      <code>getEventManager</code>
      <code>getSharedManager</code>
    </MixedMethodCall>
    <PossiblyInvalidArgument occurrences="1">
      <code>$moduleManager</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getEventManager</code>
    </PossiblyInvalidMethodCall>
  </file>
  <file src="src/Listener/ModuleDependencyCheckerListener.php">
    <MixedArgument occurrences="1">
      <code>$dependencyModule</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$this-&gt;loaded[$dependencyModule]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="2">
      <code>$dependencies</code>
      <code>$dependencyModule</code>
    </MixedAssignment>
    <PossiblyNullArgument occurrences="1">
      <code>$module</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Listener/ModuleLoaderListener.php">
    <MissingReturnType occurrences="1">
      <code>onLoadModulesPost</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$callback</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$callback</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>include $this-&gt;options-&gt;getModuleMapCacheFile()</code>
    </MixedReturnStatement>
    <UnresolvableInclude occurrences="1">
      <code>include $this-&gt;options-&gt;getModuleMapCacheFile()</code>
    </UnresolvableInclude>
  </file>
  <file src="src/Listener/ModuleResolverListener.php">
    <MixedMethodCall occurrences="2">
      <code>new $class()</code>
      <code>new $moduleName()</code>
    </MixedMethodCall>
  </file>
  <file src="src/Listener/OnBootstrapListener.php">
    <MixedAssignment occurrences="2">
      <code>$events</code>
      <code>$sharedEvents</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>attach</code>
      <code>getEventManager</code>
      <code>getSharedManager</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getEventManager</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullArgument occurrences="1">
      <code>$module</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Listener/ServiceListener.php">
    <DocblockTypeContradiction occurrences="1">
      <code>gettype($config)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>ServiceListener</code>
    </ImplementedReturnTypeMismatch>
    <InvalidScalarArgument occurrences="1">
      <code>is_object($config) ? get_class($config) : (is_scalar($config) ? $config : gettype($config))</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="1">
      <code>addServiceManager</code>
    </MissingReturnType>
    <MixedArgument occurrences="9">
      <code>$class</code>
      <code>$config</code>
      <code>$configs</code>
      <code>$configs</code>
      <code>$sm</code>
      <code>$sm['module_class_method']</code>
      <code>$sm['service_manager']</code>
      <code>$sm['service_manager']</code>
      <code>$sm['service_manager']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="6">
      <code>$configs['configuration_classes']</code>
      <code>$sm['module_class_interface']</code>
      <code>$sm['module_class_method']</code>
      <code>$sm['module_class_method']</code>
      <code>$sm['module_class_method']</code>
      <code>$this-&gt;serviceManagers[$key]['configuration']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="2">
      <code>$this-&gt;serviceManagers[$key]['configuration']</code>
      <code>$this-&gt;serviceManagers[$key]['configuration']</code>
    </MixedArrayAssignment>
    <MixedArrayOffset occurrences="4">
      <code>$config[$metadata['config_key']]</code>
      <code>$config[$metadata['config_key']]</code>
      <code>$config[$metadata['config_key']]</code>
      <code>$config[$metadata['config_key']]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="6">
      <code>$class</code>
      <code>$config</code>
      <code>$configs</code>
      <code>$name</code>
      <code>$sm</code>
      <code>$sm</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>$sm['module_class_method']</code>
      <code>new $class()</code>
    </MixedMethodCall>
    <MixedOperand occurrences="1">
      <code>$sm['module_class_method']</code>
    </MixedOperand>
    <PossiblyNullArgument occurrences="1">
      <code>$module</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>getMergedConfig</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$configuredServiceManager</code>
      <code>$defaultServiceConfig</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition occurrences="1">
      <code>is_object($config)</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>is_scalar($config)</code>
      <code>is_string($serviceManager)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType occurrences="1">
      <code>is_scalar($config) ? $config : gettype($config)</code>
    </TypeDoesNotContainType>
    <UndefinedMethod occurrences="8">
      <code>getAbstractFactories</code>
      <code>getAliases</code>
      <code>getDelegators</code>
      <code>getFactories</code>
      <code>getInitializers</code>
      <code>getInvokables</code>
      <code>getServices</code>
      <code>getShared</code>
    </UndefinedMethod>
    <UnusedVariable occurrences="1">
      <code>$name</code>
    </UnusedVariable>
  </file>
  <file src="src/Listener/ServiceListenerInterface.php">
    <MissingReturnType occurrences="1">
      <code>addServiceManager</code>
    </MissingReturnType>
  </file>
  <file src="src/ModuleEvent.php">
    <DocblockTypeContradiction occurrences="2">
      <code>is_object($module)</code>
      <code>is_string($moduleName)</code>
    </DocblockTypeContradiction>
    <MixedInferredReturnType occurrences="1">
      <code>null|object</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;module</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="4">
      <code>$configListener</code>
      <code>$moduleName</code>
      <code>ModuleEvent</code>
      <code>ModuleEvent</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/ModuleManager.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>ModuleManager</code>
    </ImplementedReturnTypeMismatch>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;loadedModules</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;modules</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>array</code>
    </InvalidReturnType>
    <MissingClosureParamType occurrences="1">
      <code>$r</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="1">
      <code>attachDefaultListeners</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$module</code>
      <code>$module</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$module</code>
      <code>$module</code>
      <code>$module</code>
    </MixedAssignment>
    <ParamNameMismatch occurrences="2">
      <code>$events</code>
      <code>$module</code>
    </ParamNameMismatch>
    <PossiblyInvalidArgument occurrences="1">
      <code>$moduleName</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast occurrences="1">
      <code>$moduleName</code>
    </PossiblyInvalidCast>
    <PropertyNotSetInConstructor occurrences="3">
      <code>$event</code>
      <code>$events</code>
      <code>$loadFinished</code>
    </PropertyNotSetInConstructor>
    <RedundantPropertyInitializationCheck occurrences="1">
      <code>isset($this-&gt;loadFinished)</code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="test/Listener/AutoloaderListenerTest.php">
    <MixedPropertyFetch occurrences="2">
      <code>$modules['ListenerTestModule']-&gt;getAutoloaderConfigCalled</code>
      <code>$modules['NotAutoloaderModule']-&gt;getAutoloaderConfigCalled</code>
    </MixedPropertyFetch>
  </file>
  <file src="test/Listener/ConfigListenerTest.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="3">
      <code>'asd'</code>
      <code>'asd'</code>
      <code>['asd']</code>
    </InvalidArgument>
    <InvalidCast occurrences="1">
      <code>['asd']</code>
    </InvalidCast>
    <MixedArgument occurrences="7">
      <code>$config</code>
      <code>$configObject</code>
      <code>$configObject</code>
      <code>$configObject</code>
      <code>$configObjectCheck</code>
      <code>$configObjectCheck</code>
      <code>$configObjectCheck</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="13">
      <code>$config['ini']</code>
      <code>$config['ini']</code>
      <code>$config['ini']</code>
      <code>$config['listener']</code>
      <code>$config['php']</code>
      <code>$config['php']</code>
      <code>$config['php']</code>
      <code>$config['some']</code>
      <code>$config['xml']</code>
      <code>$config['xml']</code>
      <code>$config['xml']</code>
      <code>$mergedConfig['indexed']</code>
      <code>$mergedConfig['keyed']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="17">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$configObject</code>
      <code>$configObject</code>
      <code>$configObject</code>
      <code>$configObject</code>
      <code>$configObject</code>
      <code>$configObjectCheck</code>
      <code>$configObjectCheck</code>
      <code>$configObjectCheck</code>
      <code>$configObjectFromCache</code>
      <code>$configObjectFromCache</code>
      <code>$configObjectFromGlob</code>
      <code>$configObjectFromGlob</code>
      <code>$mergedConfig</code>
    </MixedAssignment>
    <MixedPropertyFetch occurrences="29">
      <code>$configObject-&gt;ini</code>
      <code>$configObject-&gt;ini</code>
      <code>$configObject-&gt;ini</code>
      <code>$configObject-&gt;ini</code>
      <code>$configObject-&gt;ini</code>
      <code>$configObject-&gt;php</code>
      <code>$configObject-&gt;php</code>
      <code>$configObject-&gt;php</code>
      <code>$configObject-&gt;php</code>
      <code>$configObject-&gt;php</code>
      <code>$configObject-&gt;xml</code>
      <code>$configObject-&gt;xml</code>
      <code>$configObject-&gt;xml</code>
      <code>$configObject-&gt;xml</code>
      <code>$configObject-&gt;xml</code>
      <code>$configObjectFromCache-&gt;ini</code>
      <code>$configObjectFromCache-&gt;ini</code>
      <code>$configObjectFromCache-&gt;php</code>
      <code>$configObjectFromCache-&gt;php</code>
      <code>$configObjectFromCache-&gt;xml</code>
      <code>$configObjectFromCache-&gt;xml</code>
      <code>$configObjectFromGlob-&gt;ini</code>
      <code>$configObjectFromGlob-&gt;ini</code>
      <code>$configObjectFromGlob-&gt;php</code>
      <code>$configObjectFromGlob-&gt;php</code>
      <code>$configObjectFromGlob-&gt;xml</code>
      <code>$configObjectFromGlob-&gt;xml</code>
      <code>$modules['ListenerTestModule']-&gt;getConfigCalled</code>
      <code>$modules['ListenerTestModule']-&gt;getConfigCalled</code>
    </MixedPropertyFetch>
  </file>
  <file src="test/Listener/DefaultListenerAggregateTest.php">
    <ArgumentTypeCoercion occurrences="7">
      <code>$eventManager</code>
      <code>$eventManager</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$moduleManager-&gt;getEventManager()</code>
      <code>$moduleManager-&gt;getEventManager()</code>
    </ArgumentTypeCoercion>
    <MixedArgument occurrences="2">
      <code>$listener</code>
      <code>$listener</code>
    </MixedArgument>
    <MixedAssignment occurrences="4">
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
      <code>$listener</code>
    </MixedAssignment>
  </file>
  <file src="test/Listener/InitTriggerTest.php">
    <MixedPropertyFetch occurrences="1">
      <code>$modules['ListenerTestModule']-&gt;initCalled</code>
    </MixedPropertyFetch>
  </file>
  <file src="test/Listener/ListenerOptionsTest.php">
    <InvalidArgument occurrences="4">
      <code>'asd'</code>
      <code>'asd'</code>
      <code>'asd'</code>
      <code>'asd'</code>
    </InvalidArgument>
  </file>
  <file src="test/Listener/LocatorRegistrationListenerTest.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>new MockApplication()</code>
    </InvalidPropertyAssignmentValue>
    <MissingClosureParamType occurrences="1">
      <code>$s</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="5">
      <code>$aliases</code>
      <code>$instances</code>
      <code>$manager</code>
      <code>$module</code>
      <code>$r-&gt;getValue($container)</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$aliases</code>
      <code>$foo</code>
      <code>$instances</code>
      <code>$manager</code>
      <code>$module</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>get</code>
      <code>get</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="2">
      <code>$foo-&gt;module</code>
      <code>$locator-&gt;get('Foo\Bar')-&gt;moduleManager</code>
    </MixedPropertyFetch>
    <MixedReturnStatement occurrences="1">
      <code>$container-&gt;getRegisteredServices()</code>
    </MixedReturnStatement>
    <UndefinedMethod occurrences="1">
      <code>setSharedManager</code>
    </UndefinedMethod>
  </file>
  <file src="test/Listener/ModuleDependencyCheckerListenerTest.php">
    <DeprecatedMethod occurrences="2">
      <code>setMethods</code>
      <code>setMethods</code>
    </DeprecatedMethod>
  </file>
  <file src="test/Listener/ModuleLoaderListenerTest.php">
    <ArgumentTypeCoercion occurrences="12">
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
      <code>$events</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="test/Listener/ModuleResolverListenerTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$expectedInstanceOf</code>
    </ArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Listener/OnBootstrapListenerTest.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>new MockApplication()</code>
    </InvalidPropertyAssignmentValue>
    <MixedPropertyFetch occurrences="1">
      <code>$modules['ListenerTestModule']-&gt;onBootstrapCalled</code>
    </MixedPropertyFetch>
    <UndefinedMethod occurrences="1">
      <code>setSharedManager</code>
    </UndefinedMethod>
  </file>
  <file src="test/Listener/ServiceListenerTest.php">
    <InvalidArgument occurrences="4">
      <code>$serviceManager</code>
      <code>$services</code>
      <code>$this-&gt;services</code>
      <code>$this-&gt;services</code>
    </InvalidArgument>
    <InvalidCast occurrences="3">
      <code>$services</code>
      <code>$this-&gt;services</code>
      <code>$this-&gt;services</code>
    </InvalidCast>
    <MissingClosureParamType occurrences="1">
      <code>$services</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($services) {</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="2">
      <code>$events</code>
      <code>$services</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$service</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="3">
      <code>$events</code>
      <code>$listener</code>
      <code>$services</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>ServiceManager</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>detach</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="1">
      <code>$r-&gt;getValue($listener)</code>
    </MixedReturnStatement>
    <PossiblyInvalidCast occurrences="1">
      <code>$serviceManager</code>
    </PossiblyInvalidCast>
  </file>
  <file src="test/Listener/TestAsset/CustomPluginManager.php">
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$instanceOf</code>
    </NonInvariantDocblockPropertyType>
    <ParamNameMismatch occurrences="1">
      <code>$plugin</code>
    </ParamNameMismatch>
  </file>
  <file src="test/Listener/TestAsset/CustomPluginManagerFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>CustomPluginManagerFactory</code>
    </DeprecatedInterface>
    <ParamNameMismatch occurrences="1">
      <code>$container</code>
    </ParamNameMismatch>
  </file>
  <file src="test/Listener/TestAsset/CustomPluginProviderInterface.php">
    <MissingReturnType occurrences="1">
      <code>getCustomPluginConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/Listener/TestAsset/SampleAbstractFactory.php">
    <DeprecatedInterface occurrences="1">
      <code>SampleAbstractFactory</code>
    </DeprecatedInterface>
    <ParamNameMismatch occurrences="3">
      <code>$container</code>
      <code>$container</code>
      <code>$name</code>
    </ParamNameMismatch>
  </file>
  <file src="test/Listener/TestAsset/UndefinedProviderInterface.php">
    <MissingReturnType occurrences="1">
      <code>getUndefinedConfig</code>
    </MissingReturnType>
  </file>
  <file src="test/ModuleEventTest.php">
    <InvalidArgument occurrences="2">
      <code>'foo'</code>
      <code>new stdClass()</code>
    </InvalidArgument>
    <InvalidCast occurrences="1">
      <code>new stdClass()</code>
    </InvalidCast>
  </file>
  <file src="test/ModuleManagerTest.php">
    <ArgumentTypeCoercion occurrences="10">
      <code>'BarModule\Module'</code>
      <code>'BarModule\Module'</code>
      <code>'BarModule\Module'</code>
      <code>'BazModule\Module'</code>
      <code>'BazModule\Module'</code>
      <code>'SomeModule\Module'</code>
      <code>'SomeModule\Module'</code>
      <code>'SomeModule\Module'</code>
      <code>'SubModule\Sub\Module'</code>
      <code>'SubModule\Sub\Module'</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>'stringShouldBeArray'</code>
    </InvalidArgument>
    <MixedArgument occurrences="13">
      <code>$test-&gt;modules</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$test-&gt;modules['BarModule']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="4">
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
      <code>$config</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>getLoadedModules</code>
    </MixedMethodCall>
    <MixedPropertyFetch occurrences="5">
      <code>$config-&gt;bar</code>
      <code>$config-&gt;baz</code>
      <code>$config-&gt;some</code>
      <code>$config-&gt;some</code>
      <code>$config-&gt;some</code>
    </MixedPropertyFetch>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>getLoadedModules</code>
    </PossiblyInvalidMethodCall>
    <UndefinedThisPropertyAssignment occurrences="2">
      <code>$this-&gt;events</code>
      <code>$this-&gt;sharedEvents</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="12">
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
      <code>$this-&gt;events</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/ResetAutoloadFunctionsTrait.php">
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $this-&gt;includePath</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="test/TestAsset/MockApplication.php">
    <MissingConstructor occurrences="2">
      <code>$events</code>
      <code>$serviceManager</code>
    </MissingConstructor>
    <MixedInferredReturnType occurrences="3">
      <code>getRequest</code>
      <code>getResponse</code>
      <code>run</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="3">
      <code>$this-&gt;request</code>
      <code>$this-&gt;response</code>
      <code>$this-&gt;response</code>
    </MixedReturnStatement>
  </file>
</files>
